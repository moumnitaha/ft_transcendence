upstream nextjs_upstream {
  server frontend:3000;
}


server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name _;  # Replace with your actual domain name
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
    server_tokens off;  # Disable server token information for security

    proxy_http_version 1.1;
    # Next.js frontend
    location / {
        proxy_pass http://frontend:3000;  # Assuming Next.js is running on port 3000
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection 'upgrade';
        # proxy_set_header Host $host;
        # proxy_cache_bypass $http_upgrade;
        # proxy_set_header X-Real-IP $remote_addr;
    }

    # Django API
    location /api {
        proxy_pass http://api:8000;  # Assuming Django API is running on port 8000
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

	location /static/ {
		alias /app/static/;
	}

    # Static files for Next.js (optional, adjust paths as needed)
    # location /_next/ {
    #     alias /var/www/your-nextjs-app/out/_next/;
    #     expires 1y;
    #     access_log off;
    # }

    # Static files for Django (optional, adjust paths as needed)
#     location /static/ {
#         alias /path/to/your/django/static/files/;
#         expires 1y;
#         access_log off;
#     }
	client_max_body_size 20M;
}


# server {
#        listen 3000 ;
# 	listen [::]:3000  ;
#        server_name localhost
# 	ssl_protocols TLSv1.2 TLSv1.3;
# 	# ssl_certificate /etc/nginx/ssl/inception.crt;
# 	# ssl_certificate_key /etc/nginx/ssl/inception.key;
#        root /frontend/public/;
#         index  index.html index.htm;
# 	location / {
#             return 301 www.google.com
#     		try_files $uri $uri/ /index.php$is_args$args;
#   	}

					
# }
# server {
#        listen 443 ssl ;
#         listen [::]:443 ssl ;
#        server_name site.xyz www.site.xyz;
#        ssl_protocols TLSv1.2 TLSv1.3;
#        ssl_certificate /etc/nginx/ssl/inception.crt;
#        ssl_certificate_key /etc/nginx/ssl/inception.key;
#        root /var/www/html;
#          index  index.html; 
#         location / {
#                 try_files $uri $uri/ =404;
#         }
# }


#proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

# upstream nextjs_upstream {
#   server frontend:3000;
# }

# server {
#   listen 80 default_server;

#   server_name _;

#   server_tokens off;

#   proxy_http_version 1.1;
#   proxy_set_header Upgrade $http_upgrade;
#   proxy_set_header Connection 'upgrade';
#   proxy_set_header Host $host;
#   proxy_cache_bypass $http_upgrade;

# #   location /_next/static {
# #     proxy_cache STATIC;
# #     proxy_pass http://nextjs_upstream;

# #     # For testing cache - remove before deploying to production
# #     add_header X-Cache-Status $upstream_cache_status;
# #   }

#   location / {
#     proxy_pass http://nextjs_upstream;
#   }
# }